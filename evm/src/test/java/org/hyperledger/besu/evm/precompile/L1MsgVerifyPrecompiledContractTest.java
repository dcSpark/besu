package org.hyperledger.besu.evm.precompile;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;

import org.hyperledger.besu.evm.frame.MessageFrame;
import org.hyperledger.besu.evm.gascalculator.FrontierGasCalculator;

import org.apache.tuweni.bytes.Bytes;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

@RunWith(Parameterized.class)
public class L1MsgVerifyPrecompiledContractTest {
  private final L1MsgVerifyPrecompiledContract contract =
      new L1MsgVerifyPrecompiledContract(new FrontierGasCalculator());

  public L1MsgVerifyPrecompiledContractTest() {}

  private final MessageFrame messageFrame = mock(MessageFrame.class);

  @Parameterized.Parameters
  public static Object[][] parameters() {
    return new Object[][] {
      {
        // (success: true, payload: 0x123456)
        "0x2f0853a300000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000098845846a201276761646472657373583900a8d915b73e36d33163acaf1b63a71c9cf64975ecc5e2dabdca6e57625266fac04a32bf256b4eb6088b623ca6bad75646b5f27309f82bb259a166686173686564f4431234565840fde1258a66b366ee03cc776a7f9a2f900b11a4f41e314813b529caf077d91f38ec76fddf7d9fb835a5e548944e73df826257122fb6b51a67ca6a82cb662ea8090000000000000000000000000000000000000000000000000000000000000000000000000000002aa4010103272006215820a0057bf300a1fafa83a429a725775db34370472376e27ab634c4032170a7232400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c616464725f7465737431717a35646a39646838636d6478767472346a68336b636138726a7730766a7434616e7a37396b34616566683977636a6a766d6176716a336a68756a6b6b6e346b707a396b793039786874743476333434376665736e3770746b6676736130796d796e0000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000031234560000000000000000000000000000000000000000000000000000000000",
        1_000L
      },
      {
        // Error("Invalid function signature")
        "0xffffffff00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000098845846a201276761646472657373583900a8d915b73e36d33163acaf1b63a71c9cf64975ecc5e2dabdca6e57625266fac04a32bf256b4eb6088b623ca6bad75646b5f27309f82bb259a166686173686564f4431234565840fde1258a66b366ee03cc776a7f9a2f900b11a4f41e314813b529caf077d91f38ec76fddf7d9fb835a5e548944e73df826257122fb6b51a67ca6a82cb662ea8090000000000000000000000000000000000000000000000000000000000000000000000000000002aa4010103272006215820a0057bf300a1fafa83a429a725775db34370472376e27ab634c4032170a7232400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c616464725f7465737431717a35646a39646838636d6478767472346a68336b636138726a7730766a7434616e7a37396b34616566683977636a6a766d6176716a336a68756a6b6b6e346b707a396b793039786874743476333434376665736e3770746b6676736130796d796e0000000000000000000000000000000000000000",
        "0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001a496e76616c69642066756e6374696f6e207369676e6174757265000000000000",
        1_000L
      },
      {
        // Error("Invalid L1Type")
        "0x2f0853a300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000098845846a201276761646472657373583900a8d915b73e36d33163acaf1b63a71c9cf64975ecc5e2dabdca6e57625266fac04a32bf256b4eb6088b623ca6bad75646b5f27309f82bb259a166686173686564f4431234565840fde1258a66b366ee03cc776a7f9a2f900b11a4f41e314813b529caf077d91f38ec76fddf7d9fb835a5e548944e73df826257122fb6b51a67ca6a82cb662ea8090000000000000000000000000000000000000000000000000000000000000000000000000000002aa4010103272006215820a0057bf300a1fafa83a429a725775db34370472376e27ab634c4032170a7232400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c616464725f7465737431717a35646a39646838636d6478767472346a68336b636138726a7730766a7434616e7a37396b34616566683977636a6a766d6176716a336a68756a6b6b6e346b707a396b793039786874743476333434376665736e3770746b6676736130796d796e0000000000000000000000000000000000000000",
        "0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000e496e76616c6964204c3154797065000000000000000000000000000000000000",
        1_000L
      },
      {
        // (success: false, payload: 0x123456)
        "0x2f0853a300000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000098845846a201276761646472657373583900a8d915b73e36d33163acaf1b63a71c9cf64975ecc5e2dabdca6e57625266fac04a32bf256b4eb6088b623ca6bad75646b5f27309f82bb259a166686173686564f4431234565840fde1258a66b366ee03cc776a7f9a2f900b11a4f41e314813b529caf077d91f38ec76fddf7d9fb835a5e548944e73df826257122fb6b51a67ca6a82cb662ea8090000000000000000000000000000000000000000000000000000000000000000000000000000002aa4010103272006215820a0057bf300a1fafa83a429a725775db34370472376e27ab634c4032170a7232400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c616464725f7465737431717a35646a39646838636d6478767472346a68336b636138726a7730766a7434616e7a37396b34616566683977636a6a766d6176716a336a68756a6b6b6e346b707a396b793039786874743476333434376665736e3770746b6676736130796d79310000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000031234560000000000000000000000000000000000000000000000000000000000",
        1_000L
      },
      {
        // Error("com.bloxbean.cardano.client.exception.AddressRuntimeException: Address cannot be null or empty")
        "0x2f0853a300000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000098845846a2012767a1646472657373583900a8d915b73e36d33163acaf1b63a71c9cf64975ecc5e2dabdca6e57625266fac04a32bf256b4eb6088b623ca6bad75646b5f27309f82bb259a166686173686564f4431234565840fde1258a66b366ee03cc776a7f9a2f900b11a4f41e314813b529caf077d91f38ec76fddf7d9fb835a5e548944e73df826257122fb6b51a67ca6a82cb662ea8090000000000000000000000000000000000000000000000000000000000000000000000000000002aa4010103272006215820a0057bf300a1fafa83a429a725775db34370472376e27ab634c4032170a7232400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c616464725f7465737431717a35646a39646838636d6478767472346a68336b636138726a7730766a7434616e7a37396b34616566683977636a6a766d6176716a336a68756a6b6b6e346b707a396b793039786874743476333434376665736e3770746b6676736130796d79310000000000000000000000000000000000000000",
        "0x08c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000005e636f6d2e626c6f786265616e2e63617264616e6f2e636c69656e742e657863657074696f6e2e4164647265737352756e74696d65457863657074696f6e3a20416464726573732063616e6e6f74206265206e756c6c206f7220656d7074790000",
        1_000L
      },
    };
  }

  @Parameterized.Parameter public String input;

  @Parameterized.Parameter(1)
  public String expectedResult;

  @Parameterized.Parameter(2)
  public long expectedGasUsed;

  @Test
  public void testPrecompiledContract() {
    final Bytes input = Bytes.fromHexString(this.input);
    final Bytes expectedComputation =
        this.expectedResult == null ? null : Bytes.fromHexString(this.expectedResult);

    assertThat(contract.computePrecompile(input, messageFrame).getOutput())
        .isEqualTo(expectedComputation);
    assertThat(contract.gasRequirement(input)).isEqualTo(expectedGasUsed);
  }
}
